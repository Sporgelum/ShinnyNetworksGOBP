amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")]
abl_counts[,c(rownames(s4c %>% filter(Condition=="Ablated")),"MGI_Symbol")]
unj_counts[,c(rownames(s4c %>% filter(Condition=="Uninjured")),"MGI_Symbol")]
sham_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")]
cry_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")]
head(cry_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")])
head(abl_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")])
head(amp_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")])
sham_counts <- cry_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")])
sham_counts <- cry_counts[,c(rownames(s4c %>% filter(Condition=="Sham")),"MGI_Symbol")]
core_counts <- cbind(
cry_counts[,c(rownames(s4c %>% filter(Condition=="Cryoinjury")),"MGI_Symbol")],
amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")],
abl_counts[,c(rownames(s4c %>% filter(Condition=="Ablated")),"MGI_Symbol")],
unj_counts[,c(rownames(s4c %>% filter(Condition=="Uninjured")),"MGI_Symbol")],
sham_counts)
core_counts
core_reg
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes)
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% unlist()
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% gsub(pattern = ",","")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% gsub(pattern = ",", " ")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% gsub(pattern = ",", replacement = " ")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(pattern = ",")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(pattern = ",")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes)
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(split = ",")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(split = ",")
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% unlist(strsplit(split = ","))
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% unlist(strsplit(split = ","))
core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
genes <- core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
core_counts %>% filter(MGI_Symbol %in% genes)
core_counts
colnames(core_counts)
names(core_counts)
core_counts[,-c(8,15,21,30)]
core_counts[,-c(8,15,21,30)] %>% filter(MGI_Symbol %in% genes)
genes
core_counts[,-c(8,15,21,30)] %>% filter(MGI_Symbol == "Lox")
core_counts[,-c(8,15,21,30)]
core_counts[,-c(8,15,21,30)] %>% filter(MGI_Symbol == "Lox12")
core_counts[,-c(8,15,21,30)] %>% filter(MGI_Symbol == "Matr3")
core_counts[,-c(8,15,21,30)]
genes <- core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0018158"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
genes
core_counts[,-c(8,15,21,30)] %>% filter(MGI_Symbol == "Lox12")
core_counts[,-c(8,15,21,30)] %>% filter(MGI_Symbol == "Lox")
core_counts[,-c(8,15,21,30)] group_by(MGI_Symbol) %>% filter(MGI_Symbol == "Lox")
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol == "Lox")
cry_counts %>% filter(MGI_Symbol == "Lox12")
abl_counts %>% filter(MGI_Symbol == "Lox12")
amp_counts %>% filter(MGI_Symbol == "Lox12")
core_reg
amp_counts %>% filter(MGI_Symbol == "Aurka")
abl_counts %>% filter(MGI_Symbol == "Aurka")
cry_counts %>% filter(MGI_Symbol == "Aurka")
genes
core_counts
genes <- c("Matr3","Pde6b")
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes,.preserve = TRUE)
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% head()
colnames(core_counts)
rownames(core_counts)
p <- plot_ly(x=colnames(core_counts), y=core_counts$MGI_Symbol, z = core_counts, type = "heatmap") %>%
layout(margin = list(l=120))
plot_ly(x=colnames(core_counts), y=core_counts$MGI_Symbol, z = core_counts, type = "heatmap")
require(plotly)
plot_ly(x=colnames(core_counts), y=core_counts$MGI_Symbol, z = core_counts, type = "heatmap")
heatmap(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes))
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
heatmap(as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)))
heatmap(x = as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)))
pheatmap::pheatmap(mat = as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)))
pheatmap::pheatmap(mat = as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)))
pheatmap::pheatmap(mat = as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)))
pheatmap::pheatmap(mat = as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)),cluster_cols = TRUE)
as.matrix(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes))
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
pheatmap::pheatmap(mat = core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes),cluster_cols = TRUE)
pheatmap::pheatmap(mat = core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes),cluster_cols = TRUE)
plot_ly(core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), type = "heatmap")
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cryo_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes
cryo_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cryo_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts
names(cry_counts)
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), type = "heatmap")
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)[,-c(1)]
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)) %>% pull(starts_with(SRR)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% pull(starts_with(SRR)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% pull(starts_with(SRR))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% pull(starts_with("SRR"))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% pull(starts_with(match = "SRR"))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% select(starts_with(match = "SRR"))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% select(starts_with(match = SRR))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% select(starts_with("SRR"))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% select(starts_with("SRR"))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% select(contains("SRR"))
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% select(contains("SRR")), type = "heatmap")
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% , type = "heatmap")
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), type = "heatmap")
core
core_reg
genes <- core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == " GO:0000280"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
genes
genes <- core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == " GO:0000280"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
genes
genes <- core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0000280"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
genes
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% head()
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), type = "heatmap")
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), z = core_counts, type = "heatmap")
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), z = core_counts, type = "heatmap")
plot_ly(cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes), z = cry_counts, type = "heatmap")
heatmap(x = cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes))
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
heatmap(x = cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)[,-c(1)])
cry_mat <- cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_mat
cry_mat[,-c(1)]
heatmap(x = cry_mat[,-c(1)])
cry_mat <- as.matrix(cry_mat[,-c(1)])
cry_mat
heatmap(x = cry_mat)
heatmap(x = cry_mat,TRUE)
heatmap(x = cry_mat,Rowv = TRUE)
cry_mat
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)[1]
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)$MGI_Symbol
cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% pull(MGI_Symbol)
rownames(cry_mat) <- cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes) %>% pull(MGI_Symbol)
heatmap(x = cry_mat,Rowv = TRUE)
cry_mat <- cry_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
cry_mat <- as.matrix(cry_mat[,-c(1)])
heatmap(x = cry_mat,Rowv = TRUE)
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
genes <- core_reg %>% group_by(ID) %>% filter(ID %in% vertex_attr(core)$name[vertex_attr(core)$name == "GO:0000280"]) %>% pull(Genes) %>% strsplit(split = ",") %>% unlist()
genes
core_counts[,-c(8,15,21,30)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes)
enrich_go_bo_df
output$genes_go_amp <- renderValueBox(valueBox(value = tags$p(enrich_go_bo_df %>% group_by(Group) %>% filter(Group == "Amputation") %>% filter(ID %in% vertex_attr(amp)$name[vertex_attr(amp)$name == "GO:0006260"]) %>% pull(geneID) %>% gsub(pattern = "/",replacement=","),style = "font-size: 35%;", style ="color : black"), color="fuchsia", subtitle = "Genes Involved in the GO:BP"))
genes_amp
genes_amp <- enrich_go_bo_df %>% group_by(Group) %>% filter(Group == "Amputation") %>% filter(ID %in% vertex_attr(amp)$name[vertex_attr(amp)$name == "GO:0006260"]) %>% pull(geneID) %>% gsub(pattern = "/",replacement=",")
genes_amp
genes_amp <- enrich_go_bo_df %>% group_by(Group) %>% filter(Group == "Amputation") %>% filter(ID %in% vertex_attr(amp)$name[vertex_attr(amp)$name == "GO:0006260"]) %>% pull(geneID) %>% gsub(pattern = "/",replacement=",") %>% unlist()
genes_amp
genes_amp <- enrich_go_bo_df %>% group_by(Group) %>% filter(Group == "Amputation") %>% filter(ID %in% vertex_attr(amp)$name[vertex_attr(amp)$name == "GO:0006260"]) %>% pull(geneID) %>% gsub(pattern = "/",replacement=",")  %>% strsplit(split = ",") %>% unlist()
genes_amp
amp_counts
names(amp_counts)
amp_counts[,-c(1,2,4:15)]
amp_counts[,-c(1,2,4:14)]
names(amp_counts)
amp_counts[,-c(1,2,4:14)]
amp_counts[,-c(1,2,4:15)]
amp_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
amp_mat <- amp_counts_genes[-c(1)]
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes[-c(1)]
amp_mat <- as.matrix(amp_counts_genes[-c(1)])
rownames(amp_mat)
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
heatmap(x = amp_mat,Rowv = Colv)
heatmap(x = amp_mat,Rowv = TRUE,Colv = TRUE)
heatmap(x = amp_mat,Rowv = TRUE)
colnames(amp_mat)
amp_counts
#names(amp_counts)
amp_counts <- amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")]
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% group_by(MGI_Symbol) %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% filter(MGI_Symbol %in% genes_amp)
amp_counts
#names(amp_counts)
amp_counts <- data.table::data.table(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% filter(MGI_Symbol %in% genes_amp)
amp_counts
#names(amp_counts)
amp_counts <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% filter(MGI_Symbol %in% genes_amp)
#names(amp_counts)
amp_counts <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
#names(amp_counts)
amp_counts <- as.data.frame(amp_counts[c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol"),])
amp_counts
#names(amp_counts)
amp_counts <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
amp_counts <- read.table(file = "D:/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/dr2mmus/Amputation_vs_Sham_mouse_enriched_all_clean.txt",header = TRUE,sep = "\t")
#names(amp_counts)
amp_counts <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
amp_counts
amp_counts_genes <- amp_counts[,-c(1,2,4:15)] %>% filter(MGI_Symbol %in% genes_amp)
s4c
amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")]
amp_counts <- read.table(file = "D:/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/dr2mmus/Amputation_vs_Sham_mouse_enriched_all_clean.txt",header = TRUE,sep = "\t")
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
amp_counts2
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes
amp_counts_genes
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition=="Amputation")),"MGI_Symbol")])
amp_counts2
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham")),"MGI_Symbol"))])
amp_counts2
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham")),"MGI_Symbol"))])
amp_counts2
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham"))),"MGI_Symbol")])
amp_counts2
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp)
amp_counts_genes
amp_mat <- as.matrix(amp_counts_genes[-c(-1)])
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
colnames(amp_mat)
amp_mat
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham"))),"MGI_Symbol")])
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp)
amp_mat <- as.matrix(amp_counts_genes[-c("MGI_Symbol")])
amp_mat
amp_counts_genes
amp_mat <- as.matrix(amp_counts_genes[,-c("MGI_Symbol")])
amp_counts_genes
amp_counts_genes[-1]
length(amp_counts_genes)
amp_mat <- as.matrix(amp_counts_genes[,-c(length(amp_counts_genes))])
amp_mat
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
colnames(amp_mat)
amp_mat
s4c %>% filter(Condition %in% c("Amputation","Sham")
heatmap(x = amp_mat,Rowv = TRUE,na.rm = TRUE,labCol = )
})
s4c %>% filter(Condition %in% c("Amputation","Sham"))
s4c %>% filter(Condition %in% c("Amputation","Sham")) %>% pull(Condition)
col_lab <- s4c %>% filter(Condition %in% c("Amputation","Sham")) %>% pull(Condition)
heatmap(x = amp_mat,Rowv = TRUE,na.rm = TRUE,labCol = col_lab )
heatmap(x = amp_mat,Rowv = TRUE,na.rm = TRUE,labCol = col_lab,keep.dendro = FALSE)
heatmap(x = amp_mat,Rowv = TRUE,na.rm = TRUE,labCol = col_lab,keep.dendro = FALSE)
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
#add heatmap of the genes in the GO:BP
require(heatmaply)
#add heatmap of the genes in the GO:BP
require(heatmaply)
install.packages("heatmaply")
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham"))),"MGI_Symbol")])
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp) %>% distinct(MGI_Symbol)
amp_counts_genes
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham"))),"MGI_Symbol")])
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp) %>% distinct(MGI_Symbol,.keep_all = TRUE)
amp_counts_genes
amp_mat <- as.matrix(amp_counts_genes[,-c(length(amp_counts_genes))])
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
col_lab <- s4c %>% filter(Condition %in% c("Amputation","Sham")) %>% pull(Condition)
heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,labCol = col_lab,scale = "row")
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham"))),"MGI_Symbol")])
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp) %>% distinct(MGI_Symbol,.keep_all = TRUE)
amp_mat <- as.matrix(amp_counts_genes[,-c(length(amp_counts_genes))])
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
genes_amp <- enrich_go_bo_df %>% group_by(Group) %>% filter(Group == "Amputation") %>% filter(ID %in% vertex_attr(amp)$name[vertex_attr(amp)$name == input$current_node_id]) %>% pull(geneID) %>% gsub(pattern = "/",replacement=",")  %>% strsplit(split = ",") %>% unlist()
#names(amp_counts)
amp_counts2 <- as.data.frame(amp_counts[,c(rownames(s4c %>% filter(Condition %in% c("Amputation","Sham"))),"MGI_Symbol")])
amp_counts_genes <- amp_counts2 %>% filter(MGI_Symbol %in% genes_amp) %>% distinct(MGI_Symbol,.keep_all = TRUE)
amp_mat <- as.matrix(amp_counts_genes[,-c(length(amp_counts_genes))])
rownames(amp_mat) <- amp_counts_genes$MGI_Symbol
heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
ph <- heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
grid.arrange(ph)
require(gridExtra)
ph <- heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
grid.arrange(ph)
ph <- heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
grid.arrange(grobs = ph)
grid.arrange(grobs = ph)
#add heatmap of the genes in the GO:BP
require(heatmaply)
require(gridExtra)
require(gridGraphics)
require(grid)
ph <- heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
ggarange(ph)
grid.arrange(grob(ph))
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
par(mar=c(5,4,6,2)) # bottom, left, top, right
heatmaply(x = amp_mat,Rowv = NA,Colv = NA,na.rm = TRUE,scale = "row")
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
runApp('D:/PhD/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/PossibleShiny/RShinyCode/ShinnyNetworksGOBP/DashWebShinyInjuries.R')
cpp <- c("GO:0032434","GO:0045732","GO:1903052","GO:0042176","GO:2000060","GO:1903364","GO:0009896","GO:0032436","GO:1901800")
cpp_genes <- get_the_genes_core_reg(goIDfromNetwork_vector = cpp,enriched_go_bp_df_core_regeneration = core_reg)
cpp_genes$Genes
get_the_genes_core_reg <- function(goIDfromNetwork_vector,enriched_go_bp_df_core_regeneration){
#Subset the genes in th respective GOID from the coreRegeneration network
a <- as.data.frame(enriched_go_bp_df_core_regeneration %>% filter(ID %in% goIDfromNetwork_vector) %>% pull(Genes) %>% strsplit(",") %>% unlist())
names(a) <- "Genes"
b <- a %>% group_by(Genes) %>% mutate(Repeatetions = n()) %>% distinct(Genes,.keep_all = TRUE)
return(b)
}
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
require(dplyr)
cartillage_bone_3_cluster <- c("GO:0110148",
"GO:0030282",
"GO:0051216",
"GO:0061036",
"GO:1904888",
"GO:0002062",
"GO:0001649",
"GO:0001503",
"GO:0060350",
"GO:0061448",
"GO:0060348",
"GO:0030278",
"GO:0048705",
"GO:0031214",
"GO:0061035",
"GO:0060349")
core_reg[core_reg$ID %in% cartillage_bone_3_cluster,] %>% pull(Genes) %>% unlist()
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
require(dplyr)
cartillage_bone_3_cluster <- c("GO:0110148",
"GO:0030282",
"GO:0051216",
"GO:0061036",
"GO:1904888",
"GO:0002062",
"GO:0001649",
"GO:0001503",
"GO:0060350",
"GO:0061448",
"GO:0060348",
"GO:0030278",
"GO:0048705",
"GO:0031214",
"GO:0061035",
"GO:0060349")
#core_reg[core_reg$ID %in% cartillage_bone_3_cluster,] %>% pull(Genes) %>% unlist()
core_reg[core_reg$ID %in% cartillage_bone_3_cluster,]$Genes
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
require(dplyr)
cartillage_bone_3_cluster <- c("GO:0110148",
"GO:0030282",
"GO:0051216",
"GO:0061036",
"GO:1904888",
"GO:0002062",
"GO:0001649",
"GO:0001503",
"GO:0060350",
"GO:0061448",
"GO:0060348",
"GO:0030278",
"GO:0048705",
"GO:0031214",
"GO:0061035",
"GO:0060349")
#core_reg[core_reg$ID %in% cartillage_bone_3_cluster,] %>% pull(Genes) %>% unlist()
#
# core_reg[core_reg$ID %in% cartillage_bone_3_cluster,]$Genes
#
# core_reg %>% filter(ID %in% cartillage_bone_3_cluster) %>% pull(Genes) %>% strsplit(",") %>% unlist() %>% distinct(.keep_all = TRUE)
#
# core_reg_df <- as.data.frame(core_reg %>% filter(ID %in% cartillage_bone_cluster) %>% pull(Genes) %>% strsplit(",") %>% unlist())
#
# names(core_reg_df) <- "Genes"
# core_reg_df %>% mutate(RepeatedGenes = count(Genes))
#  group_by(P_ID) %>%
#   mutate(count = n())
# core_reg_df %>% group_by(Genes) %>% mutate(Repeated_Genes =n())
# core_reg_df %>% group_by(Genes) %>% distinct()
carti_biom_clusters <- c("GO:0110148",
"GO:0051216",
"GO:0030282",
"GO:0061036",
"GO:0002062",
"GO:0001649",
"GO:0061448",
"GO:0001503",
"GO:0030278",
"GO:0031214",
"GO:0061035")
core_reg
core_reg_2_df <- as.data.frame(core_reg %>% filter(ID %in% carti_biom_clusters) %>% pull(Genes) %>% strsplit(",") %>% unlist())
get_the_genes_core_reg <- function(goIDfromNetwork_vector,enriched_go_bp_df_core_regeneration){
#Subset the genes in th respective GOID from the coreRegeneration network
a <- as.data.frame(enriched_go_bp_df_core_regeneration %>% filter(ID %in% goIDfromNetwork_vector) %>% pull(Genes) %>% strsplit(",") %>% unlist())
names(a) <- "Genes"
b <- a %>% group_by(Genes) %>% mutate(Repeatetions = n()) %>% distinct(Genes,.keep_all = TRUE)
return(b)
}
cpp <- c("GO:0032434","GO:0045732","GO:1903052","GO:0042176","GO:2000060","GO:1903364","GO:0009896","GO:0032436","GO:1901800")
cpp_genes <- get_the_genes_core_reg(goIDfromNetwork_vector = cpp,enriched_go_bp_df_core_regeneration = core_reg)
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
get_the_genes_core_reg <- function(goIDfromNetwork_vector,enriched_go_bp_df_core_regeneration){
#Subset the genes in th respective GOID from the coreRegeneration network
a <- as.data.frame(enriched_go_bp_df_core_regeneration %>% filter(ID %in% goIDfromNetwork_vector) %>% pull(Genes) %>% strsplit(",") %>% unlist())
names(a) <- "Genes"
b <- a %>% group_by(Genes) %>% mutate(Repeatetions = n()) %>% distinct(Genes,.keep_all = TRUE)
return(b)
}
cpp <- c("GO:0032434","GO:0045732","GO:1903052","GO:0042176","GO:2000060","GO:1903364","GO:0009896","GO:0032436","GO:1901800")
cpp_genes <- get_the_genes_core_reg(goIDfromNetwork_vector = cpp,enriched_go_bp_df_core_regeneration = core_reg)
library(dplyr)
get_the_genes_core_reg <- function(goIDfromNetwork_vector,enriched_go_bp_df_core_regeneration){
#Subset the genes in th respective GOID from the coreRegeneration network
a <- as.data.frame(enriched_go_bp_df_core_regeneration %>% filter(ID %in% goIDfromNetwork_vector) %>% pull(Genes) %>% strsplit(",") %>% unlist())
names(a) <- "Genes"
b <- a %>% group_by(Genes) %>% mutate(Repeatetions = n()) %>% distinct(Genes,.keep_all = TRUE)
return(b)
}
cpp <- c("GO:0032434","GO:0045732","GO:1903052","GO:0042176","GO:2000060","GO:1903364","GO:0009896","GO:0032436","GO:1901800")
cpp_genes <- get_the_genes_core_reg(goIDfromNetwork_vector = cpp,enriched_go_bp_df_core_regeneration = core_reg)
get_the_genes_core_reg <- function(goIDfromNetwork_vector,enriched_go_bp_df_core_regeneration){
#Subset the genes in th respective GOID from the coreRegeneration network
a <- as.data.frame(enriched_go_bp_df_core_regeneration %>% filter(ID %in% goIDfromNetwork_vector) %>% pull(Genes) %>% strsplit(",") %>% unlist())
names(a) <- "Genes"
b <- a %>% group_by(Genes) %>% mutate(Repeatetions = n()) %>% distinct(Genes,.keep_all = TRUE)
return(b)
}
cpp <- c("GO:0032434","GO:0045732","GO:1903052","GO:0042176","GO:2000060","GO:1903364","GO:0009896","GO:0032436","GO:1901800")
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
core_reg <- read.table("C:/Users/marius/Documents/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
core_reg <- read.table("D:/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/coreRegeneration/GEM/heart_regeneration_core_mm_fil_cleaned_Abl_Sham__gobp.txt",sep = "\t",header = TRUE)
head(core_reg)
get_the_genes_core_reg <- function(goIDfromNetwork_vector,enriched_go_bp_df_core_regeneration){
#Subset the genes in th respective GOID from the coreRegeneration network
a <- as.data.frame(enriched_go_bp_df_core_regeneration %>% filter(ID %in% goIDfromNetwork_vector) %>% pull(Genes) %>% strsplit(",") %>% unlist())
names(a) <- "Genes"
b <- a %>% group_by(Genes) %>% mutate(Repeatetions = n()) %>% distinct(Genes,.keep_all = TRUE)
return(b)
}
cpp <- c("GO:0032434","GO:0045732","GO:1903052","GO:0042176","GO:2000060","GO:1903364","GO:0009896","GO:0032436","GO:1901800")
cpp_genes <- get_the_genes_core_reg(goIDfromNetwork_vector = cpp,enriched_go_bp_df_core_regeneration = core_reg)
cpp_genes$Genes
setwd("~/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/ShinnyNetworksGOBP")
library(shiny); runApp('DashWebShinyInjuries_plotly.R')
install.packages(c("devtools", "rlang"))
setwd("~/Phd/Projects/prsa/Outputs/r/Cytoscape/Cleaned_Annotation_Ensembl_v4/ResultsCytoscape/ShinnyNetworksGOBP")
library(shiny); runApp('DashWebShinyInjuries_plotly.R')
#################################
#   Uninjured                   #
#################################
unj <- read_graph(file = "/data/cleaned_unique_go_bp_v2__Uninjured_vs_Sham.graphml",
format = "graphml")
#################################
#   Uninjured                   #
#################################
unj <- read_graph(file = "./data/cleaned_unique_go_bp_v2__Uninjured_vs_Sham.graphml",
format = "graphml")
runApp('DashWebShinyInjuries_plotly.R')
runApp('DashWebShinyInjuries_plotly.R')
options('repos')
options(repos = BiocManager::repositories())
options('repos')
runApp('DashWebShinyInjuries_plotly.R')
runApp('DashWebShinyInjuries_plotly.R')
runApp('DashWebShinyInjuries_plotly.R')
col_annotation_amp
col_annotation_amp <- data.frame("Conditions" = s4c |> filter(rownames(s4c) %in% colnames(amp_mat)) |> pull(Condition))
s4c <- read.table(file = "./data/colData_s4c.txt",
header = TRUE,
sep = "\t")
col_annotation_amp <- data.frame("Conditions" = s4c |> filter(rownames(s4c) %in% colnames(amp_mat)) |> pull(Condition))
col_annotation_amp
runApp('DashWebShinyInjuries_plotly.R')
runApp('DashWebShinyInjuries_plotly.R')
runApp('DashWebShinyInjuries_plotly.R')
